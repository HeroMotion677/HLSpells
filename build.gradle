buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

repositories {
    // JEI
    maven {
        // Location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // Location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "Curios maven"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Modding Legacy Maven"
        url = "https://maven.moddinglegacy.com/artifactory/modding-legacy/"
    }
    maven { url = 'https://repo.spongepowered.org/maven' }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = project.mod_version
group = 'com.divinity'
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

sourceSets {
    main {
        resources {
            srcDirs += 'src/generated/resources'
            exclude '.cache'
        }
    }
    datagen {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        all {
            def srgToMcpFile = project.tasks.createSrgToMcp.outputs.files[0].path

            property 'net.minecraftforge.gradle.GradleStart.srg.srg-mcp', srgToMcpFile
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', srgToMcpFile
        }
        client {
            workingDirectory project.file('run/client')
            arg "-mixin.config=hlspells.mixin.json"
            property 'forge.logging.console.level', 'debug'
        }

        server {
            workingDirectory project.file('run/server')
            arg "-mixin.config=hlspells.mixin.json"
            property 'forge.logging.console.level', 'debug'
        }
        data {
            workingDirectory project.file('run/data')
            jvmArg '-Dterminal.ansi=true'

            property 'forge.logging.console.level', 'debug'
            args '--mod', 'hlspells', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            ideaModule project.name + ".datagen"

            mods {
                hlspells {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }
    }
}

java {
    withSourcesJar()
}

mixin {
    add sourceSets.main, "hlspells.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-${forge_version}"

    // Compile against the API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:${jei_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    compileOnly fg.deobf("com.legacy:lucent:${lucent_version}")

    // At runtime, use the full mod jar
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:${jei_version}")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    runtimeOnly fg.deobf("com.legacy:lucent:${lucent_version}")

    // Processes mixin annotations
    annotationProcessor 'org.spongepowered:mixin:0.8.5-SNAPSHOT:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "hlspells",
                "Specification-Vendor"    : "hlspellssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "hlspellssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "hlspells.mixin.json" ,
                "FMLModType"              : "GAMELIBRARY"
        ])
    }
    rename 'mixin.refmap.json', 'hlspells.refmap.json'
}

tasks.jarJar {
    archiveClassifier = ''
}

reobf {
    jarJar {}
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.jarJar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}